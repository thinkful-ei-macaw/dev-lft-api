BEGIN;

CREATE TABLE users (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    username TEXT NOT NULL UNIQUE,
    password TEXT NOT NULL,
    first_name TEXT NOT NULL,
    last_name TEXT NOT NULL,
    skills TEXT ARRAY DEFAULT ARRAY[]::TEXT[] NOT NULL,
    bio TEXT, 
    github_url TEXT,
    linkedin_url TEXT,
    twitter_url TEXT,
    date_created TIMESTAMPTZ DEFAULT now() NOT NULL
);

    CREATE TABLE projects (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name TEXT NOT NULL,
    handle TEXT NOT NULL UNIQUE, 
    creator_id INTEGER REFERENCES users(id) ON DELETE CASCADE NOT NULL,
    description TEXT NOT NULL,
    tags TEXT ARRAY DEFAULT ARRAY[]::TEXT[] NOT NULL,
    live_url TEXT,
    trello_url TEXT,
    github_url TEXT,
    date_created TIMESTAMPTZ DEFAULT now() NOT NULL
);

CREATE TABLE vacancies (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    project_id INTEGER REFERENCES projects
    (id) ON DELETE CASCADE NOT NULL,
    user_id INTEGER REFERENCES users(id) ON DELETE SET NULL,
    title TEXT NOT NULL,
    description TEXT NOT NULL,
    skills TEXT ARRAY DEFAULT ARRAY[]::TEXT[] NOT NULL,
    date_created TIMESTAMPTZ DEFAULT now() NOT NULL
);

CREATE TYPE request_status AS ENUM (
    'pending',
    'approved',
    'denied'
);

CREATE TABLE requests (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    vacancy_id INTEGER REFERENCES vacancies(id) ON DELETE CASCADE NOT NULL,
    user_id INTEGER REFERENCES users(id) ON DELETE CASCADE NOT NULL,
    status request_status DEFAULT 'pending' NOT NULL,
    date_created TIMESTAMPTZ DEFAULT now() NOT NULL
);

CREATE TABLE posts (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    project_id INTEGER REFERENCES projects(id) ON DELETE CASCADE NOT NULL,
    user_id INTEGER REFERENCES users(id) ON DELETE CASCADE NOT NULL,
    message TEXT NOT NULL,
    date_created TIMESTAMPTZ DEFAULT now() NOT NULL
);

CREATE TABLE chats (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    request_id INTEGER REFERENCES requests(id) ON DELETE CASCADE NOT NULL,
    author_id INTEGER REFERENCES users(id) ON DELETE CASCADE NOT NULL,
    recipient_id INTEGER REFERENCES users(id) ON DELETE CASCADE NOT NULL,
    closed BOOLEAN DEFAULT FALSE,
    date_created TIMESTAMPTZ DEFAULT now() NOT NULL
);

CREATE TABLE messages (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    chat_id INTEGER REFERENCES chats(id) ON DELETE CASCADE NOT NULL,
    author_id INTEGER REFERENCES users(id) ON DELETE CASCADE NOT NULL,
    body TEXT NOT NULL,
    date_created TIMESTAMPTZ DEFAULT now() NOT NULL
);

CREATE TYPE notification_type AS ENUM (
    'join',
    'leave',
    'post',
    'chat'
);

CREATE TABLE notifications (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    recipient_id INTEGER REFERENCES users(id) ON DELETE CASCADE NOT NULL,
    project_id INTEGER REFERENCES projects(id) ON DELETE CASCADE NOT NULL,
    type notification_type NOT NULL,
    seen BOOLEAN DEFAULT FALSE,
    date_created TIMESTAMPTZ DEFAULT now() NOT NULL
);

COMMIT;